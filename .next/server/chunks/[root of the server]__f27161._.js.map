{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/marteau/Documents/final/jachv2/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI || \"mongodb://user:user@localhost:27017/saint-vinci?authSource=admin\";\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"Please define the MONGODB_URI environment variable inside .env\");\r\n}\r\n\r\n// Déclare globalement une propriété _mongoose pour gérer la connexion\r\ndeclare global {\r\n  var _mongoose: { conn: mongoose.Mongoose | null; promise: Promise<mongoose.Mongoose> | null };\r\n}\r\n\r\n// Cache de connexion pour éviter les reconnexions multiples pendant le développement\r\nlet cached = global._mongoose;\r\n\r\nif (!cached) {\r\n  cached = global._mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectDB() {\r\n  // Si la connexion est déjà établie, on retourne la connexion\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  // Si la promesse de connexion n'existe pas, on la crée\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI).then((mongooseInstance) => {\r\n      return mongooseInstance;\r\n    });\r\n  }\r\n\r\n  try {\r\n    cached.conn = await cached.promise;\r\n  } catch (error) {\r\n    cached.promise = null; // Réinitialisation de la promesse en cas d'erreur\r\n    console.error(\"Failed to connect to MongoDB:\", error);\r\n    throw error;\r\n  }\r\n\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectDB;\r\nexport { mongoose }; // Ajout de l'exportation de mongoose\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAE/C,uCAAkB;;AAElB;AAOA,qFAAqF;AACrF,IAAI,SAAS,OAAO,SAAS;AAE7B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,SAAS,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC1D;AAEA,eAAe;IACb,6DAA6D;IAC7D,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,uDAAuD;IACvD,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,iGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,CAAC;YACnD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,OAAO;QACd,OAAO,OAAO,GAAG,MAAM,kDAAkD;QACzE,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe;;CACM,qCAAqC"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///home/marteau/Documents/final/jachv2/lib/auth.ts"],"sourcesContent":["import jwt, { JwtPayload } from \"jsonwebtoken\";\r\nimport { jwtVerify } from \"jose\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { NextRequest } from \"next/server\";\r\n\r\n// Définition de l'interface pour le payload décodé du JWT\r\ninterface DecodedToken extends JwtPayload {\r\n  id: string;\r\n  email: string;\r\n  role: \"admin\" | \"teacher\"; // Adaptez les rôles à vos besoins\r\n  iat: number;\r\n  exp: number;\r\n}\r\n\r\nconst JWT_SECRET =\r\n  process.env.JWT_SECRET ||\r\n  \"45820f08a0329cd43151e6990cf4ad917a9e04ed6abba1b49802e7d9893b828605aab07669ee90ab1eb6f0c5aaa8990cd6f89389d0d43771e2f12e9c64906186\";\r\n\r\nexport function generateToken(user: any) {\r\n  return jwt.sign(\r\n    {\r\n      id: user._id,\r\n      email: user.email,\r\n      role: user.role,\r\n    },\r\n    JWT_SECRET,\r\n    { expiresIn: \"24h\" }\r\n  );\r\n}\r\n\r\nexport async function verifyAuth(request: NextRequest): Promise<DecodedToken | null> {\r\n  const token = request.cookies.get(\"token\")?.value;\r\n  if (!token) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const secret = new TextEncoder().encode(JWT_SECRET);\r\n    const { payload } = await jwtVerify(token, secret);\r\n    const decoded = payload as DecodedToken;\r\n\r\n    if (\r\n      typeof decoded.id === \"string\" &&\r\n      typeof decoded.email === \"string\" &&\r\n      typeof decoded.role === \"string\" &&\r\n      decoded.role in { admin: true, teacher: true } // Vérifie si le rôle est valide\r\n    ) {\r\n      return decoded;\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function requireAuth(request: NextRequest): Promise<DecodedToken> {\r\n  const user = await verifyAuth(request);\r\n\r\n  if (!user) {\r\n    throw NextResponse.json({ error: \"Non autorisé\" }, { status: 401 });\r\n  }\r\n\r\n  return user;\r\n}\r\n\r\nexport async function requireAdmin(request: NextRequest): Promise<DecodedToken> {\r\n  const user = await requireAuth(request);\r\n\r\n  // Vérifiez si l'utilisateur est un DecodedToken et son rôle\r\n  if (user.role !== \"admin\") {\r\n    throw NextResponse.json({ error: \"Accès refusé\" }, { status: 403 });\r\n  }\r\n\r\n  return user;\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AAEA;AADA;;;;AAaA,MAAM,aACJ,QAAQ,GAAG,CAAC,UAAU,IACtB;AAEK,SAAS,cAAc,IAAS;IACrC,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CACb;QACE,IAAI,KAAK,GAAG;QACZ,OAAO,KAAK,KAAK;QACjB,MAAM,KAAK,IAAI;IACjB,GACA,YACA;QAAE,WAAW;IAAM;AAEvB;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAC5C,IAAI,CAAC,OAAO;QACV,OAAO;IACT;IAEA,IAAI;QACF,MAAM,SAAS,IAAI,cAAc,MAAM,CAAC;QACxC,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,8JAAA,CAAA,YAAS,AAAD,EAAE,OAAO;QAC3C,MAAM,UAAU;QAEhB,IACE,OAAO,QAAQ,EAAE,KAAK,YACtB,OAAO,QAAQ,KAAK,KAAK,YACzB,OAAO,QAAQ,IAAI,KAAK,YACxB,QAAQ,IAAI,IAAI;YAAE,OAAO;YAAM,SAAS;QAAK,EAAE,gCAAgC;UAC/E;YACA,OAAO;QACT;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,eAAe,YAAY,OAAoB;IACpD,MAAM,OAAO,MAAM,WAAW;IAE9B,IAAI,CAAC,MAAM;QACT,MAAM,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACnE;IAEA,OAAO;AACT;AAEO,eAAe,aAAa,OAAoB;IACrD,MAAM,OAAO,MAAM,YAAY;IAE/B,4DAA4D;IAC5D,IAAI,KAAK,IAAI,KAAK,SAAS;QACzB,MAAM,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACnE;IAEA,OAAO;AACT"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///home/marteau/Documents/final/jachv2/app/api/auth/login/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport connectDB from '@/lib/db';\nimport {UserModel} from '@/models/User';\nimport { generateToken } from '@/lib/auth';\n\nexport async function POST(request: Request) {\n  try {\n    await connectDB();\n    const { email, password } = await request.json();\n    console.log('beee')\n    // Trouver l'utilisateur\n    const user = await UserModel.findOne({ email });\n    if (!user) {\n      return NextResponse.json(\n        { error: 'Email ou mot de passe incorrect' },\n        { status: 401 }\n      );\n    }\n\n    // Vérifier le mot de passe\n    const isValid = await user.comparePassword(password);\n    if (!isValid) {\n      return NextResponse.json(\n        { error: 'Email ou mot de passe incorrect' },\n        { status: 401 }\n      );\n    }\n\n    // Générer le token\n    const token = generateToken(user);\n    console.log('deed')\n\n    return NextResponse.json({\n      token,\n      user: {\n        id: user._id,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        role: user.role,\n      }\n    });\n  } catch (error) {\n    console.error('Erreur lors de la connexion:', error);\n    return NextResponse.json(\n      { error: 'Erreur lors de la connexion' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AAFA;;;;;AAIO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,CAAA,GAAA,2HAAA,CAAA,UAAS,AAAD;QACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAC9C,QAAQ,GAAG,CAAC;QACZ,wBAAwB;QACxB,MAAM,OAAO,MAAM,gHAAA,CAAA,YAAS,CAAC,OAAO,CAAC;YAAE;QAAM;QAC7C,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkC,GAC3C;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,UAAU,MAAM,KAAK,eAAe,CAAC;QAC3C,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkC,GAC3C;gBAAE,QAAQ;YAAI;QAElB;QAEA,mBAAmB;QACnB,MAAM,QAAQ,CAAA,GAAA,6GAAA,CAAA,gBAAa,AAAD,EAAE;QAC5B,QAAQ,GAAG,CAAC;QAEZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA,MAAM;gBACJ,IAAI,KAAK,GAAG;gBACZ,OAAO,KAAK,KAAK;gBACjB,WAAW,KAAK,SAAS;gBACzB,UAAU,KAAK,QAAQ;gBACvB,MAAM,KAAK,IAAI;YACjB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}