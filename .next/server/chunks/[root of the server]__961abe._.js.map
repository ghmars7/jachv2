{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/marteau/Documents/final/jachv2/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI || \"mongodb://user:user@localhost:27017/saint-vinci?authSource=admin\";\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"Please define the MONGODB_URI environment variable inside .env\");\r\n}\r\n\r\n// Déclare globalement une propriété _mongoose pour gérer la connexion\r\ndeclare global {\r\n  var _mongoose: { conn: mongoose.Mongoose | null; promise: Promise<mongoose.Mongoose> | null };\r\n}\r\n\r\n// Cache de connexion pour éviter les reconnexions multiples pendant le développement\r\nlet cached = global._mongoose;\r\n\r\nif (!cached) {\r\n  cached = global._mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectDB() {\r\n  // Si la connexion est déjà établie, on retourne la connexion\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  // Si la promesse de connexion n'existe pas, on la crée\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI).then((mongooseInstance) => {\r\n      return mongooseInstance;\r\n    });\r\n  }\r\n\r\n  try {\r\n    cached.conn = await cached.promise;\r\n  } catch (error) {\r\n    cached.promise = null; // Réinitialisation de la promesse en cas d'erreur\r\n    console.error(\"Failed to connect to MongoDB:\", error);\r\n    throw error;\r\n  }\r\n\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectDB;\r\nexport { mongoose }; // Ajout de l'exportation de mongoose\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAE/C,uCAAkB;;AAElB;AAOA,qFAAqF;AACrF,IAAI,SAAS,OAAO,SAAS;AAE7B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,SAAS,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC1D;AAEA,eAAe;IACb,6DAA6D;IAC7D,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,uDAAuD;IACvD,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,iGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,CAAC;YACnD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,OAAO;QACd,OAAO,OAAO,GAAG,MAAM,kDAAkD;QACzE,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe;;CACM,qCAAqC"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/marteau/Documents/final/jachv2/models/Student.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst StudentSchema = new mongoose.Schema(\r\n  {\r\n    firstName: {\r\n      type: String,\r\n      required: [true, \"Le prénom est requis\"],\r\n      trim: true,\r\n    },\r\n    lastName: {\r\n      type: String,\r\n      required: [true, \"Le nom est requis\"],\r\n      trim: true,\r\n    },\r\n    class: {\r\n      type: String,\r\n      required: [true, \"La classe est requise\"],\r\n    },\r\n    birthDate: {\r\n      type: String,\r\n      required: [true, \"La date de naissance est requise\"],\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: [true, \"L'email est requis\"],\r\n      unique: true,\r\n      trim: true,\r\n      lowercase: true,\r\n    },\r\n    parentEmail: {\r\n      type: String,\r\n      required: [true, \"L'email du parent est requis\"],\r\n      trim: true,\r\n      lowercase: true,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\n// export default mongoose.models.StudentModel || mongoose.model(\"Student\", StudentSchema);\r\n// Create and export the model only once\r\nconst StudentModel = mongoose.models.Student || mongoose.model(\"Student\", StudentSchema);\r\n\r\nexport default StudentModel;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CACvC;IACE,WAAW;QACT,MAAM;QACN,UAAU;YAAC;YAAM;SAAuB;QACxC,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAoB;QACrC,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAwB;IAC3C;IACA,WAAW;QACT,MAAM;QACN,UAAU;YAAC;YAAM;SAAmC;IACtD;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAqB;QACtC,QAAQ;QACR,MAAM;QACN,WAAW;IACb;IACA,aAAa;QACX,MAAM;QACN,UAAU;YAAC;YAAM;SAA+B;QAChD,MAAM;QACN,WAAW;IACb;AACF,GACA;IACE,YAAY;AACd;AAGF,2FAA2F;AAC3F,wCAAwC;AACxC,MAAM,eAAe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAW;uCAE3D"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/marteau/Documents/final/jachv2/models/Classes.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\nimport StudentModel from \"./Student\";\r\nimport Student from \"./Student\";\r\n\r\nconst ClassSchema = new mongoose.Schema(\r\n  {\r\n    level: {\r\n      type: String,\r\n      required: [true, \"La classe est requise\"],\r\n    },\r\n    studentsNumber: {\r\n      type: Number,\r\n      required: [true, \"Le nombre d'élève est requis\"],\r\n      unique: true,\r\n      trim: true,\r\n      lowercase: true,\r\n    },\r\n    teacher: {\r\n      type: String,\r\n      required: [true, \"Le professeur est requis\"],\r\n    },\r\n    students: [Student],\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nconst ClassModel = mongoose.models.Class || mongoose.model(\"Class\", ClassSchema);\r\n\r\nexport default ClassModel;\r\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,cAAc,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CACrC;IACE,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAwB;IAC3C;IACA,gBAAgB;QACd,MAAM;QACN,UAAU;YAAC;YAAM;SAA+B;QAChD,QAAQ;QACR,MAAM;QACN,WAAW;IACb;IACA,SAAS;QACP,MAAM;QACN,UAAU;YAAC;YAAM;SAA2B;IAC9C;IACA,UAAU;QAAC,mHAAA,CAAA,UAAO;KAAC;AACrB,GACA;IACE,YAAY;AACd;AAGF,MAAM,aAAa,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAErD"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///home/marteau/Documents/final/jachv2/app/api/classes/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport connectDB from \"@/lib/db\";\r\nimport ClassModel from \"@/models/Classes\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDB(); // Connect to the database\r\n    const classes = await ClassModel.find({}) // Find Students with the \"Professeur\" role\r\n      .sort({ level: 1 }); // Sort by lastName in ascending order\r\n    return NextResponse.json(classes); // Return the results as JSON\r\n  } catch (error) {\r\n    console.log(error);\r\n    return NextResponse.json({ error: \"Erreur lors de la récupération des classes\" }, { status: 500 }); // Return an error response\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AADA;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,2HAAA,CAAA,UAAS,AAAD,KAAK,0BAA0B;QAC7C,MAAM,UAAU,MAAM,mHAAA,CAAA,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,2CAA2C;SAClF,IAAI,CAAC;YAAE,OAAO;QAAE,IAAI,sCAAsC;QAC7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU,6BAA6B;IAClE,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA6C,GAAG;YAAE,QAAQ;QAAI,IAAI,2BAA2B;IACjI;AACF"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}